name: Log Output Application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  REGISTRY: europe-north1-docker.pkg.dev
  REPOSITORY: my-repository
  IMAGE_DIR1: log-reader
  IMAGE_DIR2: log-writer
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: log-output-env

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Confirm if GKE_SA_KEY secret is available
        run: |
          if [ -z "${{ secrets.GKE_SA_KEY }}" ]; then
            echo "GKE_SA_KEY is NOT set or accessible"
            exit 1
          else
            echo "GKE_SA_KEY is injected"
          fi

      - name: Confirm if GKE_PROJECT secret is available
        run: |
          if [ -z "${{ secrets.GKE_PROJECT }}" ]; then
            echo "GKE_PROJECT is NOT set or accessible"
            exit 1
          else
            echo "GKE_PROJECT is injected"
          fi

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker "$REGISTRY"

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: 'Form the image name for log-writer'
        run: echo "IMAGE_TAG_DIR1=$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE_DIR1:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build log-writer image
        run: docker build --tag $IMAGE_TAG_DIR1 log-output/log-writer/

      - name: Publish log-writer image
        run: docker push $IMAGE_TAG_DIR1

      - name: 'Form the image name for log-reader'
        run: echo "IMAGE_TAG_DIR2=$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE_DIR2:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build log-reader image
        run: docker build --tag $IMAGE_TAG_DIR2 log-output/log-reader/

      - name: Publish log-reader image
        run: docker push $IMAGE_TAG_DIR2
